{"version":3,"sources":["./src/app/views/challenge/challenge.component.ts","./src/app/views/challenge/challenge.component.html","./src/app/views/challenge/challenge-routing.module.ts","./src/app/services/episode.service.ts","./src/app/services/location.service.ts","./src/app/services/character.service.ts","./src/app/views/challenge/challenge.module.ts"],"names":[],"mappings":";;;;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACF;AACF;;;;;;;;;IC2BpC,yEAA2B;IAAA,uDAA8B;;IAAA,4DAAS;;;IAAvC,0DAA8B;IAA9B,0JAA8B;;;IAQ3E,mFAAiF;;;IAA5C,mFAAuB;;;IAD9D,0EAAkF;IAChF,kJAAiF;IACnF,4DAAM;;;IADgB,0DAAe;IAAf,8EAAe;;;IAwBjB,yEAA2B;IAAA,uDAA8B;;IAAA,4DAAS;;;IAAvC,0DAA8B;IAA9B,0JAA8B;;;IAU7E,0EAA0E;IACxE,mFAA2D;IAC7D,4DAAM;;;IADe,0DAAmB;IAAnB,+EAAmB;;ADnDzC,MAAM,kBAAkB;IAgD7B,YACU,gBAAkC,EAClC,eAAgC,EAChC,cAA8B;QAF9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAjDxC,UAAK,GAAG,gBAAgB,CAAC;QAEzB,cAAS,GAAW,CAAC,CAAC;QACtB,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QAEvB,mBAAc,GAKR,EAAE,CAAC;QAET,aAAa;QACb,eAAU,GAAgB,EAAE,CAAC;QAC7B,mBAAc,GAAU;YACtB,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,GAAG;SACZ,CAAC;QAEF,YAAY;QACZ,cAAS,GAAe,EAAE,CAAC;QAC3B,kBAAa,GAAU;YACrB,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,GAAG;SACZ,CAAC;QAEF,WAAW;QACX,aAAQ,GAAc,EAAE,CAAC;QACzB,iBAAY,GAAU;YACpB,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,GAAG;SACZ,CAAC;QACF,gBAAW,GAIL,EAAE,CAAC;IAML,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,iBAAiB,CAAC,IAAY,EAAE,QAAe;QAC7C,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,QAAQ;QACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IACzD,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAoB,EAAE,EAAE;YACxE,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAC3B,GAAG,EAAE;YACH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAoB,EAAE,EAAE;gBACxE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;YACvC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAC3B,GAAG,EAAE;gBACH,IAAI,CAAC,KAAK,KAAK,EAAG;oBAChB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC3C,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACjD,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;iBAC3D;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,0BAA0B,CAAC,IAAiB;QAC1C,IAAI,OAAM,CAAC,OAAO,CAAC,KAAK,SAAS,EAAE;YACjC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1D;IACH,CAAC;IAED,gBAAgB,CAAC,IAAW;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,IAAI,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IAED,YAAY,CAAC,GAA2C,EAAE,MAAc;QACtE,IAAI,KAAK,GAAG,CAAC;QACb,GAAG,CAAC,OAAO,CAAC,CAAC,EAAoC,EAAE,EAAE;YACnD,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAW,EAAE,EAAE;gBACtD,IAAI,KAAK,MAAM,CAAC,iBAAiB,EAAE,IAAI,KAAK,EAAE,CAAC;YACjD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAmB,EAAE,EAAE;YACrE,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EACzB,GAAG,EAAE;YACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAmB,EAAE,EAAE;gBACrE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;YACtC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAC3B,GAAG,EAAE;gBACH,IAAI,CAAC,KAAK,KAAK,EAAE;oBACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAC1C,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC/C,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;iBACzD;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,yBAAyB,CAAC,IAAgB;QACxC,IAAI,OAAM,CAAC,OAAO,CAAC,KAAK,SAAS,EAAE;YACjC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACzD;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAkB,EAAE,EAAE;YAClE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC5C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAC3B,GAAG,EAAE;YACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAkB,EAAE,EAAE;gBAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;YACrC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAC3B,GAAG,EAAE;gBACH,IAAI,CAAC,KAAK,KAAK,EAAE;oBACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACzC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;oBACrD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC7C,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxD,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;iBACvD;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAGD,wBAAwB,CAAC,IAAe;QACtC,IAAI,OAAM,CAAC,OAAO,CAAC,KAAK,SAAS,EAAE;YACjC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACxD;IACH,CAAC;IAED,mCAAmC,CAAC,QAAmB;QACrD,IAAI,QAAQ,GAIN,EAAE;QACR,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAC,EAAE,EAAE,IAAI,EAAE,UAAU,EAAU,EAAE,CAAC,EAAE,EAAE;YACtD,IAAI,iBAAiB,GAAa,EAAE,CAAC;YACrC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAU,EAAE,EAAE;gBAChC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChG,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,KAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7D,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,KAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3D,CAAC,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC;gBACZ,EAAE;gBACF,IAAI;gBACJ,QAAQ,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,iBAAiB,CAAC,CAAC;aAC1C,CAAC,CAAC;QACL,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,QAAQ;QAC3B,MAAM,EAAE,GAAG,WAAW,CAAC,GAAG,EAAE;QAC5B,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;IACjB,CAAC;;oFA3MU,kBAAkB;kGAAlB,kBAAkB,8GANlB;YACT,4EAAgB;YAChB,0EAAe;YACf,wEAAc;SACf;QCvBH,yEAAsB;QAEpB,yEAAiC;QAC/B,yEAAiB;QACf,yEAAiB;QACf,wEAA4B;QAAA,qEAAU;QAAA,4DAAK;QAC3C,uEAAgB;QACd,iHACA;QAAA,yEAAQ;QACN,uEAAsE;QACpE,6EACF;QAAA,4DAAI;QACN,4DAAS;QACX,4DAAI;QACN,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,8EAAuC;QACrC,0EAA4B;QAC1B,0EAAiB;QACf,0EAAiB;QACf,yEAAiB;QAAA,yEAAa;QAAA,4DAAK;QACnC,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QACF,sEAAI;QAAA,qEAAG;QAAA,2FAA+B;QAAA,0EAAQ;QAAA,iEAAG;QAAA,4DAAS;QAAC,+GAAkD;QAAA,0EAAQ;QAAA,qEAAS;QAAA,4DAAS;QAAA,4DAAI;QAAA,4DAAK;QAChJ,sEAAI;QAAA,qEAAG;QAAA,2FAA+B;QAAA,0EAAQ;QAAA,iEAAG;QAAA,4DAAS;QAAC,+GAAkD;QAAA,0EAAQ;QAAA,oEAAQ;QAAA,4DAAS;QAAA,4DAAI;QAAA,4DAAK;QAC/I,sEAAI;QAAA,qEAAG;QAAA,2FAA+B;QAAA,0EAAQ;QAAA,iEAAG;QAAA,4DAAS;QAAC,+GAAkD;QAAA,0EAAQ;QAAA,sEAAU;QAAA,4DAAS;QAAA,4DAAI;QAAA,4DAAK;QACjJ,sEAAI;QAAA,qEAAG;QAAA,2GAAqC;QAAA,4DAAI;QAAA,4DAAK;QACvD,4DAAK;QACL,qEAAG;QACD,yFACA;QAAA,iEAAI;QACJ,6EAAgB;QAAA,uHAAkE;QAAC,2EACrF;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EAAkC;QAChC,0EAAiB;QACf,iHAEM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAU;QAEV,8EAAuC;QACrC,2EAAsC;QACpC,0EAAiB;QACf,0EAAiB;QACf,yEAAiB;QAAA,yEAAa;QAAA,4DAAK;QACnC,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,sEAAI;QACF,sEAAI;QAAA,qEAAG;QACL,sEAAS;QAAA,0EAAQ;QAAA,mEAAO;QAAA,4DAAS;QAAA,wGACjC;QAAA,0EAAQ;QAAA,oEAAQ;QAAA,4DAAS;QAAC,8DAAC;QAAA,0EAAQ;QAAA,kEAAM;QAAA,4DAAS;QAAA,yEAClD;QAAA,0EAAQ;QAAA,sEAAU;QAAA,4DAAS;QAAC,mFAAsB;QAAA,0EAAQ;QAAA,mEAAO;QAAA,4DAAS;QAC1E,iFACF;QAAA,4DAAI;QAAA,4DAAK;QACT,sEAAI;QAAA,qEAAG;QAAA,2GAAqC;QAAA,4DAAI;QAAA,4DAAK;QACvD,4DAAK;QACL,qEAAG;QACD,yFACA;QAAA,iEAAI;QACJ,6EAAgB;QAAA,uHAAkE;QAAC,2EACrF;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAM;QACN,0EAAiB;QACf,0EAAiB;QACf,0EAAiB;QAAA,wDAA8B;QAAA,4DAAK;QACtD,4DAAM;QACR,4DAAM;QACN,0EAAiB;QACf,iHAEM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAU;QACZ,4DAAM;;QAhD+B,2DAAgB;QAAhB,gFAAgB;QAOkB,0DAAiB;QAAjB,uFAAiB;QAyBnD,2DAAgB;QAAhB,gFAAgB;QAM1B,0DAA8B;QAA9B,sGAA8B;QAIN,0DAAgB;QAAhB,oFAAgB;;;;;;;;;;;;;;AC1EnE;AAAA;AAAA;AAAA;AAAA;AAAuD;AACI;;;AAE3D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAkB,EAAE;CAC5C,CAAC;AAMK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;;;;;;;;;;;;;;;;;;;ACFjB,MAAM,cAAc;IAIzB,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAHxB,WAAM,GAAW,yCAAyC,CAAC;IAI/D,CAAC;IAEL,WAAW,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,GAAG,IAAI,CAAC,MAAM,UAAU,IAAI,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,CAAC,CAAC;IAC9D,CAAC;;4EAdU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;ACEb,MAAM,eAAe;IAI1B,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAHxB,WAAM,GAAW,0CAA0C,CAAC;IAIhE,CAAC;IAEL,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAgB,GAAG,IAAI,CAAC,MAAM,UAAU,IAAI,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/D,CAAC;;8EAdU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;ACEb,MAAM,gBAAgB;IAI3B,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAHxB,WAAM,GAAW,2CAA2C,CAAC;IAIjE,CAAC;IAEL,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,GAAG,IAAI,CAAC,MAAM,UAAU,IAAI,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,YAAY,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;;gFAdU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEqB;AACT;AACa;;AAWjE,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBANjB;YACP,4DAAY;YACZ,gFAAsB;YACtB,qFAAgB;SACjB;mIAEU,eAAe,mBAPX,uEAAkB,aAE/B,4DAAY;QACZ,gFAAsB;QACtB,qFAAgB","file":"challenge-challenge-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Character, CharactersHttp } from '../../interfaces/character.interface';\r\nimport { Episode, EpisodesHttp } from '../../interfaces/episode.interface';\r\nimport { Location, LocationsHttp } from '../../interfaces/location.interface';\r\nimport { CharacterService } from '../../services/character.service';\r\nimport { LocationService } from '../../services/location.service';\r\nimport { EpisodeService } from '../../services/episode.service';\r\n\r\ninterface Count {\r\n  count: number;\r\n  time: number;\r\n  pages: number;\r\n  letter: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-challenge',\r\n  templateUrl: './challenge.component.html',\r\n  styleUrls: ['./challenge.component.scss'],\r\n  providers: [\r\n    CharacterService,\r\n    LocationService,\r\n    EpisodeService\r\n  ]\r\n})\r\nexport class ChallengeComponent implements OnInit {\r\n\r\n  title = 'Rick and Morty';\r\n\r\n  initTimer: number = 0;\r\n  finalTimer: number = 0;\r\n  fase1Timer: number = 0;\r\n  fase2Timer: number = 0;\r\n\r\n  challengesData: {\r\n    name: string;\r\n    count: number;\r\n    time: number;\r\n    letter: string;\r\n  }[] = [];\r\n\r\n  // CHARACTERS\r\n  characters: Character[] = [];\r\n  charactersData: Count = {\r\n    count: 0,\r\n    time: 0,\r\n    pages: 0,\r\n    letter: 'c'\r\n  };\r\n\r\n  // LOCATIONS\r\n  locations: Location[] = [];\r\n  locationsData: Count = {\r\n    count: 0,\r\n    time: 0,\r\n    pages: 0,\r\n    letter: 'l'\r\n  };\r\n\r\n  // EPISODES\r\n  episodes: Episode[] = [];\r\n  episodesData: Count = {\r\n    count: 0,\r\n    time: 0,\r\n    pages: 0,\r\n    letter: 'e'\r\n  };\r\n  epiLocation: {\r\n    id: number,\r\n    name: string,\r\n    location: string[]\r\n  }[] = [];\r\n\r\n  constructor(\r\n    private characterService: CharacterService,\r\n    private locationService: LocationService,\r\n    private episodeService: EpisodeService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.initTimer = performance.now();\r\n    this.getCharacterPages();\r\n    this.getLocationPages();\r\n    this.getEpisodePages();\r\n  }\r\n\r\n  getChallengesData(name: string, dataChal: Count) {\r\n    const { count, time, letter } = dataChal\r\n    this.challengesData.push({ name, count, time, letter })\r\n  }\r\n\r\n  getCharacterPages() {\r\n    this.characterService.getCharacters(1).subscribe((data: CharactersHttp) => {\r\n      this.charactersData.pages = data.info.pages;\r\n    },\r\n    (err) => console.error(err),\r\n    () => {\r\n      this.getAllCharacters(this.charactersData.pages);\r\n    });\r\n  }\r\n\r\n  getAllCharacters(pages: number) {\r\n    for (let i = 1; i <= pages; i++) {\r\n      this.characterService.getCharacters(i).subscribe((data: CharactersHttp) => {\r\n        this.characters.push(...data.results)\r\n      },\r\n      (err) => console.error(err),\r\n      () => {\r\n        if (i === pages ) {\r\n          this.calcCountAndTime(this.charactersData);\r\n          this.saveCharactersLocalStorage(this.characters);\r\n          this.getChallengesData('Characters', this.charactersData);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  saveCharactersLocalStorage(data: Character[]) {\r\n    if (typeof(Storage) !== undefined) {\r\n      localStorage.setItem('characters', JSON.stringify(data));\r\n    }\r\n  }\r\n\r\n  calcCountAndTime(data: Count) {\r\n    data.count = this.countLetters(this.characters, data.letter.toLocaleLowerCase());\r\n    data.time = (performance.now() - this.initTimer);\r\n  }\r\n\r\n  countLetters(arr: (Character[] | Location[] | Episode[]), letter: string) {\r\n    let count = 0\r\n    arr.forEach((el: (Character | Location | Episode)) => {\r\n      el.name.toLowerCase().split('').forEach((char:string) => {\r\n        char === letter.toLocaleLowerCase() && count++;\r\n      });\r\n    });\r\n    return count;\r\n  }\r\n\r\n  getLocationPages() {\r\n    this.locationService.getLocations(1).subscribe((data: LocationsHttp) => {\r\n      this.locationsData.pages = data.info.pages;\r\n    },\r\n    (err) => console.log(err),\r\n    () => {\r\n      this.getAllLocations(this.locationsData.pages);\r\n    });\r\n  }\r\n\r\n  getAllLocations(pages: number) {\r\n    for (let i = 1; i <= pages; i++) {\r\n      this.locationService.getLocations(i).subscribe((data: LocationsHttp) => {\r\n        this.locations.push(...data.results)\r\n      },\r\n      (err) => console.error(err),\r\n      () => {\r\n        if (i === pages) {\r\n          this.calcCountAndTime(this.locationsData);\r\n          this.saveLocationsLocalStorage(this.locations);\r\n          this.getChallengesData('Locations', this.locationsData);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  saveLocationsLocalStorage(data: Location[]) {\r\n    if (typeof(Storage) !== undefined) {\r\n      localStorage.setItem('locations', JSON.stringify(data));\r\n    }\r\n  }\r\n\r\n  getEpisodePages() {\r\n    this.episodeService.getEpisodes(1).subscribe((data: EpisodesHttp) => {\r\n      this.episodesData.pages = data.info.pages;\r\n    },\r\n    (err) => console.error(err),\r\n    () => {\r\n      this.getAllEpisodes(this.episodesData.pages);\r\n    });\r\n  }\r\n\r\n  getAllEpisodes(pages: number) {\r\n    for (let i = 1; i <= pages; i++) {\r\n      this.episodeService.getEpisodes(i).subscribe((data: EpisodesHttp) => {\r\n        this.episodes.push(...data.results)\r\n      },\r\n      (err) => console.error(err),\r\n      () => {\r\n        if (i === pages) {\r\n          this.calcCountAndTime(this.episodesData);\r\n          this.fase1Timer = performance.now() - this.initTimer;\r\n          this.saveEpisodesLocalStorage(this.episodes);\r\n          this.getEpisodesCharacterLocationsOrigin(this.episodes);\r\n          this.getChallengesData('Episodes', this.episodesData);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  saveEpisodesLocalStorage(data: Episode[]) {\r\n    if (typeof(Storage) !== undefined) {\r\n      localStorage.setItem('episodes', JSON.stringify(data));\r\n    }\r\n  }\r\n\r\n  getEpisodesCharacterLocationsOrigin(episodes: Episode[]) {\r\n    let epiLocWo: {\r\n      id: number,\r\n      name: string,\r\n      location: string[]\r\n    }[] = []\r\n    episodes.forEach(({id, name, characters}: Episode, i) => {\r\n      let charLocationWorld: string[] = [];\r\n      characters.forEach((el: string) => {\r\n        const char = this.characters[Number(el.split('https://rickandmortyapi.com/api/character/')[1])];\r\n        char?.location && charLocationWorld.push(char.location.name);\r\n        char?.origin && charLocationWorld.push(char.origin.name);\r\n      })\r\n      epiLocWo.push({\r\n        id,\r\n        name,\r\n        location: [...new Set(charLocationWorld)]\r\n      });\r\n    })\r\n    this.epiLocation = epiLocWo\r\n    const t1 = performance.now()\r\n    this.fase2Timer = t1 - this.initTimer;\r\n    console.log(t1)\r\n  }\r\n\r\n}\r\n","<div class=\"episodes\">\r\n\r\n  <div class=\"container mb-2 mt-2\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <h1 class=\"pb-2 main-title\">Challenges</h1>\r\n        <p class=\"lead\">\r\n          This a technical challenge for a job offer using the\r\n          <strong>\r\n            <a class=\"rm-api\" href=\"https://rickandmortyapi.com/\" target=\"_blank\">\r\n              RickandMortyApi\r\n            </a>\r\n          </strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <section class=\"challenge-1 challenge\">\r\n    <div class=\"container mb-2\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <h2 class=\"pb-2\">Challenge # 1</h2>\r\n          <h6>Char counter:</h6>\r\n          <ul>\r\n            <li><p>How many times does the letter <strong>\"l\"</strong> (case insensitive) appear in the names of all the <strong>locations</strong></p></li>\r\n            <li><p>how many times does the letter <strong>\"e\"</strong> (case insensitive) appear in the names of all the <strong>episodes</strong></p></li>\r\n            <li><p>How many times does the letter <strong>\"c\"</strong> (case insensitive) appear in the names of all the <strong>characters</strong></p></li>\r\n            <li><p>how long the program took 👆 in total</p></li>\r\n          </ul>\r\n          <p>\r\n            Total execution of Fase # 1\r\n            <br>\r\n            Execution Time: <strong *ngIf=\"fase1Timer\">{{ fase1Timer | date: 'SSS' }}</strong> milliseconds.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"container fase1 mb-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 col-md-6 col-lg-4\" *ngFor=\"let challenge of challengesData\">\r\n          <app-challenge-one *ngIf=\"challenge\" [challenge]=\"challenge\"></app-challenge-one>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"challenge-1 challenge\">\r\n    <div class=\"container episodes__task\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <h2 class=\"pb-2\">Challenge # 2</h2>\r\n          <h6>Episode locations:</h6>\r\n          <ul>\r\n            <li><p>\r\n              For each <strong>episode</strong>, indicate the quantity and a list with the\r\n              <strong>location</strong> (<strong>origin</strong>) of all the\r\n              <strong>characters</strong> that appeared in that <strong>episode</strong>\r\n              (without repeating)\r\n            </p></li>\r\n            <li><p>how long the program took 👆 in total</p></li>\r\n          </ul>\r\n          <p>\r\n            Total execution of Fase # 2\r\n            <br>\r\n            Execution Time: <strong *ngIf=\"fase2Timer\">{{ fase2Timer | date: 'SSS' }}</strong> milliseconds.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <h3 class=\"mb-4\">{{ episodes.length }} Episodes</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *ngFor=\"let episode of epiLocation; let i = index\">\r\n          <app-challenge-two [episode]=\"episode\"></app-challenge-two>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChallengeComponent } from './challenge.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ChallengeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChallengeRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Episode, EpisodesHttp } from '../interfaces/episode.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EpisodeService {\r\n\r\n  private APIURL: string = 'https://rickandmortyapi.com/api/episode';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  getEpisodes(page: number): Observable<EpisodesHttp> {\r\n    return this.httpClient.get<EpisodesHttp>(`${this.APIURL}/?page=${page}`);\r\n  }\r\n\r\n  getEpisode(id: number) {\r\n    return this.httpClient.get<Episode>(`${this.APIURL}/${id}`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Location, LocationsHttp } from '../interfaces/location.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n\r\n  private APIURL: string = 'https://rickandmortyapi.com/api/location';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  getLocations(page: number): Observable<LocationsHttp> {\r\n    return this.httpClient.get<LocationsHttp>(`${this.APIURL}/?page=${page}`);\r\n  }\r\n\r\n  getLocation(id: number) {\r\n    return this.httpClient.get<Location>(`${this.APIURL}/${id}`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Character, CharactersHttp } from '../interfaces/character.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharacterService {\r\n\r\n  private APIURL: string = 'https://rickandmortyapi.com/api/character';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  getCharacters(page: number): Observable<CharactersHttp> {\r\n    return this.httpClient.get<CharactersHttp>(`${this.APIURL}/?page=${page}`);\r\n  }\r\n\r\n  getCharacter(id: number) {\r\n    return this.httpClient.get<Character>(`${this.APIURL}/${id}`);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChallengeRoutingModule } from './challenge-routing.module';\r\nimport { ChallengeComponent } from './challenge.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ChallengeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ChallengeRoutingModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class ChallengeModule { }\r\n"],"sourceRoot":"webpack:///"}